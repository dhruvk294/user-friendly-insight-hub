
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://dumfvkzxnfmrnxhrcyjz.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImR1bWZ2a3p4bmZtcm54aHJjeWp6Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ4MjY4ODQsImV4cCI6MjA2MDQwMjg4NH0._WKzFRwsfqPgwJdf0_eLMtbfgtasN8es_sm1CfSWAGw";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Helper function to save prediction results to Supabase
export async function savePredictionToSupabase(predictionData: any) {
  try {
    const { data, error } = await supabase
      .from('heart_predictions')
      .insert([
        { 
          prediction_data: predictionData.formData,
          prediction_result: predictionData.prediction === 1,
          probability: predictionData.probability,
          risk_factors: predictionData.riskFactors,
          created_at: new Date().toISOString()
        }
      ])
      .select();
      
    if (error) throw error;
    return data;
  } catch (error) {
    console.error('Error saving prediction to Supabase:', error);
    throw error;
  }
}

// Helper function to get all predictions from Supabase
export async function getPredictions() {
  try {
    const { data, error } = await supabase
      .from('heart_predictions')
      .select('*')
      .order('created_at', { ascending: false });
      
    if (error) throw error;
    return data;
  } catch (error) {
    console.error('Error getting predictions from Supabase:', error);
    throw error;
  }
}
